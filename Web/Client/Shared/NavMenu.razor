@inject NavigationManager navigation
<header class="navbar navbar-dark navbar-full bg-primary doc-navbar-default">
    <button aria-controls="navdrawerDefault" aria-expanded="false" aria-label="Toggle Navdrawer" class="navbar-toggler" data-target="#navdrawerDefault" data-toggle="navdrawer"><span class="navbar-toggler-icon"></span></button>
    <a href="/" class="navbar-brand mr-auto">Restore Monarchy</a>
    <AuthorizeView>
        <Authorized>
            <a class="link" href="/account"><img src="/img/avatars/@string.Concat(context.User.Identity.Name, ".jpg")" width="35" height="35" class="rounded-circle" /></a>
            <a class="nav-link font-weight-bold mr-sm-2" href="/account">@context.User.FindFirst(System.Security.Claims.ClaimTypes.GivenName).Value</a>
            <form action="/signout" method="post">
                <button class="btn btn-info mr-sm-2" type="submit">Sign Out</button>
            </form>
        </Authorized>
        <NotAuthorized>
            <form action="/signin" method="post">
                <button class="btn btn-info mr-sm-2" type="submit">Sign In</button>
            </form>
        </NotAuthorized>
    </AuthorizeView>
</header>

<div class="navdrawer navdrawer-default" id="navdrawerDefault" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="navdrawer-content">
        <div class="navdrawer-header">
            <a class="navbar-brand px-0" href="javascript:void(0)">Restore Monarchy</a>
        </div>
        <nav class="navdrawer-nav">
            <a data-toggle="navdrawer" data-target="#navdrawerDefault" class="nav-item nav-link @(location == "" ? "active" : "")" href="/">Home</a>
            <a data-toggle="navdrawer" data-target="#navdrawerDefault" class="nav-item nav-link @(location == "shop" ? "active" : "")" href="/shop">Shop</a>
            <a data-toggle="navdrawer" data-target="#navdrawerDefault" class="nav-item nav-link @(location == "support" ? "active" : "")" href="/support">Support</a>
        </nav>
        <AuthorizeView Roles="Admin, Moderator">
            <Authorized>
                <div class="navdrawer-divider"></div>
                <p class="navdrawer-subheader">Dashboard</p>
                <ul class="navdrawer-nav">
                    <li class="nav-item">
                        <a data-toggle="navdrawer" data-target="#navdrawerDefault" class="nav-link active" href="/dashboard/announcements">Announcements</a>
                    </li>
                    <li class="nav-item">
                        <a data-toggle="navdrawer" data-target="#navdrawerDefault" class="nav-link active" href="/dashboard/products">Products</a>
                    </li>
                </ul>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {

    string location;

    protected override async Task OnInitializedAsync()
    {
        location = navigation.ToBaseRelativePath(navigation.Uri);
        navigation.LocationChanged += LocationChanged;
    }

    private void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        location = navigation.ToBaseRelativePath(navigation.Uri);
    }
}