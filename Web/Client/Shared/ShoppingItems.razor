@inject HttpClient httpClient
@using Core.Models;
@using Markdig;

<div class="row justify-content-center">
    <div class="col-xl-9 card">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs">
                <li class="nav-item">
                    <a class="nav-link @(active == "ranks" ? "active" : "")" @onclick="@(x => active = "ranks")" href="javascript:void(0)">Ranks</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(active == "kits" ? "active" : "")" @onclick="@(x => active = "kits")" href="javascript:void(0)">Kits</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(active == "extras" ? "active" : "")" @onclick="@(x => active = "extras")" href="javascript:void(0)">Extras</a>
                </li>
            </ul>
        </div>
        <div class="card-body ">
            <h4 class="card-title">Restore Monarchy Servers Shop</h4>
            <p class="card-text">Have fun buying the perks that fit you and be sure to give us a review!</p>
            <div class="card-group">
                @if (products != null)
                {
                    @foreach (var product in products.Where(x => x.Category.Equals(active, StringComparison.OrdinalIgnoreCase)))
                    {
                        string modalId = product.ProductId + "Details";
                        <div class="card" style="width: 15rem;">
                            <button class="unstyle-button" type="button" data-toggle="modal" data-target="#@modalId">
                                <img class="card-img-top" style="width: 15rem; height: 13rem; object-fit: cover;" src="/img/products/@string.Concat(product.ProductId, ".png")">
                            </button>

                            <div class="modal fade" id="@modalId" tabindex="-1" role="dialog" aria-labelledby="@string.Concat(product.ProductId, "DetailsLabel")" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">@product.Name</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            @(new MarkupString(product.Description))
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                            <a class="btn btn-info" href="/shop/checkout/@product.ProductId" data-dismiss="modal">Buy Now</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="card-body">
                        <h4 class="card-title">@product.Name</h4>
                        <p class="card-text">@product.Description</p>
                    </div>*@

                            <div class="card-actions">
                                <button class="btn btn-info mr-2" type="button" data-toggle="modal" data-target="#@modalId">
                                    Details
                                </button>
                                <a class="btn btn-info" href="/shop/checkout/@product.ProductId">Buy for @product.Price.ToString("C")</a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="progress">
                        <div class="progress-bar progress-bar-indeterminate" role="progressbar"></div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-xl-3 d-none d-xl-block">
        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">Quick tip</h5>
                <p class="card-text">Don't pay with your mum's credit card!</p>
            </div>
        </div>
        <div class="card mb-2">
            <div class="card-body">
                <h5 class="card-title">Discord Guild</h5>
                <h6 class="card-subtitle mb-2 text-muted">It's time to ditch Skype and TeamSpeak!</h6>
                <a href="https://discord.gg/SswRqqC" class="btn btn-info">Join us!</a>
            </div>
        </div>
    </div>
</div>

@code {
    string active = "ranks";

    List<Product> products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        products = await httpClient.GetJsonAsync<List<Product>>("api/products");
        foreach (var product in products)
        {
            product.Description = Markdown.ToHtml(product.Description);
        }
    }
}