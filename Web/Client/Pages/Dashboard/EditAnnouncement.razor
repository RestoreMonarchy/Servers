@page "/dashboard/announcements/edit-announcement/{id:int}"
@using Newtonsoft.Json;
@inject HttpClient httpClient
@*@inject AuthenticationStateProvider authenticationStateProvider*@
@attribute [Authorize(Roles = "Admin, Moderator")]

<Breadcrumb Items="@(new[] { "Dashboard", "Announcements", "Edit Announcement" })" />

@if (announcement != null)
{
    <AnnouncementForm IsEdit="true" Announcement="announcement" OnSubmitted="UpdateAnnouncementAsync" />
}
else
{
    <div class="progress">
        <div class="progress-bar progress-bar-indeterminate" role="progressbar"></div>
    </div>
}

@code {

    [Parameter]
    public int Id { get; set; }

    Announcement announcement;

    protected override async Task OnInitializedAsync()
    {
        announcement = await httpClient.GetJsonAsync<Announcement>("api/announcements/" + Id);
    }

    public async Task UpdateAnnouncementAsync(Announcement editedAnnouncement)
    {
        Console.WriteLine("test");
        await httpClient.SendJsonAsync(HttpMethod.Put, "api/announcements", editedAnnouncement);
    }
}