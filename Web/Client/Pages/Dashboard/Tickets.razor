@page "/dashboard/tickets"
@using Core.Models;
@inject HttpClient httpClient
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [Authorize(Roles = "Admin, Moderator")]

<Breadcrumb Items="@(new[] { "Dashboard", "Tickets" })" />
@if (tickets != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Title</th>
                <th scope="col">Category</th>
                <th scope="col">Author</th>
                <th scope="col">Responses</th>
                <th scope="col">Last Update</th>
                <th scope="col">Date Created</th>
                <th scope="col">Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in tickets)
            {
                <tr>
                    <th scope="row">@ticket.TicketId</th>
                    <td><a href="/ticket/@ticket.TicketId">@ticket.Title</a></td>
                    <td>@ticket.Category</td>
                    <td>@ticket.AuthorId</td>
                    <td>@ticket.Answers.Count</td>
                    <td>@ticket.LastUpdate.ToString()</td>
                    <td>@ticket.CreateDate.ToString()</td>
                    <td><a href="javascript:void(0)" @onclick="@(() => ToggleTicketAsync(ticket))">@(ticket.Status ? "Closed" : "Open")</a></td>
                </tr>
            }
        </tbody>
    </table>
    @*<TicketForm Ticket="editTicket" IsEdit="isEdit" OnSubmitted="OnSubmittedAsync" />*@
}
else
{
    <ProgressBar />
}

@code {
    List<Ticket> tickets;

    //public async Task OnSubmittedAsync(Ticket ticket)
    //{
    //    // TODO: Has to be finished
    //}

    protected override async Task OnInitializedAsync()
    {
        tickets = await httpClient.GetJsonAsync<List<Ticket>>("api/tickets/dashboard");
    }

    private async Task ToggleTicketAsync(Ticket ticket)
    {
        ticket.Status = await httpClient.PutJsonAsync<bool>("api/tickets/" + ticket.TicketId, null);
    }
}