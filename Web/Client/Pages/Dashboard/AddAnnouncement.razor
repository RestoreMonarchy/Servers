@page "/dashboard/announcements/add-announcement"
@using Core.Models;
@inject HttpClient httpClient
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [Authorize(Roles = "Admin, Moderator")]

<nav class="mt-4 mb-3" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/dashboard/announcements">Announcements</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Announcement</li>
    </ol>
</nav>
<AnnouncementForm IsEdit="false" Announcement="announcement" OnSubmitted="PostAnnouncementAsync" />

@code {
    Announcement announcement = new Announcement();

    public async Task PostAnnouncementAsync(Announcement announcement)
    {
        var state = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (announcement.Content != null && announcement.Title != null)
        {
            announcement.AuthorId = state.User.Identity.Name;
            await httpClient.PostJsonAsync("api/announcements", announcement);
        }
    }
}