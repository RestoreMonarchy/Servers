@page "/account"
@using Core.Models;
@inject HttpClient httpClient
@inject AuthenticationStateProvider authenticationStateProvider
@attribute [Authorize]

<br /><br />
@if (player != null)
{
    <img src="/img/avatars/@string.Concat(player.PlayerId, ".jpg")" class="rounded-circle mx-auto d-block" width="130" height="130">
    <ul class="list-group">
        <li class="list-group-item active"><b>SteamID:</b> @player.PlayerId</li>
        <li class="list-group-item"><b>Name:</b> @player.PlayerName</li>
        <li class="list-group-item"><b>Balance:</b> @player.Balance.ToString("C")</li>
        <li class="list-group-item"><b>Role:</b> @player.Role</li>
        <li class="list-group-item"><b>Country:</b> @player.PlayerCountry</li>
        <li class="list-group-item"><b>Bans:</b> @player.PlayerBans.Count</li>
        <li class="list-group-item"><b>Last Activity:</b> @player.PlayerLastActivity</li>
    </ul>
}
else
{
    <ProgressBar />
}

@code {
    Player player;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        player = await httpClient.GetJsonAsync<Player>("api/players");
    }
}
