@page "/shop/checkout/{ProductId:int}"
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient httpClient
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager nav

<br />
<br />
<ShopStepper active="2" />

@if (product != null)
{
    <div class="jumbotron mt-3">
        <h2>You are buying @product.Name for €@product.Price!</h2>
        <p class="text-muted">Please don't buy anything yet, until the website is officially released.</p>
        <hr class="my-4">
        <p>Be sure to read our <a href="javascript:void(0)">Terms & Conditions</a> before processing the purchase!</p>
        <form @onsubmit="async () => await CreateSaleAsync()">
            <button type="submit" class="unstyle-button" border="0" name="submit"><img src="https://www.paypalobjects.com/webstatic/en_US/i/buttons/checkout-logo-large.png" alt="Check out with PayPal" /></button>
        </form>
    </div>
}
else
{
    <ProgressBar />
}

@code {
    [Parameter]
    public int ProductId { get; set; }

    Sale sale;

    private string url = "https://www.sandbox.paypal.com/nl/cgi-bin/webscr";

    private Product product;
    bool executed = false;

    protected override async Task OnInitializedAsync()
    {
        product = await httpClient.GetJsonAsync<Product>("api/products/" + ProductId);
    }

    async Task CreateSaleAsync()
    {
        if (executed)
        {
            return;
        }

        executed = true;
        var state = await authStateProvider.GetAuthenticationStateAsync();
        sale = new Sale(product.ProductId, state.User.Identity.Name);
        sale.SaleId = await httpClient.PostJsonAsync<int>("api/sales/", sale);

        Dictionary<string, string> dict = new Dictionary<string, string>()
    {
            { "cmd", "_xclick" },
            { "business", "tomasz.wrona-facilitator@hotmail.com" },
            { "item_name", product.Name },
            { "item_number", product.ProductId.ToString() },
            { "custom", sale.SaleId.ToString() },
            { "amount", product.Price.ToString() },
            { "currency_code", "EUR" },
            { "no_shipping", "1" },
            { "no_note", "1" } 
        };

        url = QueryHelpers.AddQueryString(url, dict);
        nav.NavigateTo(url);
    }
}